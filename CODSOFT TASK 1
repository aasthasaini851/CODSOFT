import re

def message_prob(user_message, recognised_words, single_response=False, required_words=[]):
    message_certainty = sum(word in recognised_words for word in user_message)
    percentage = message_certainty / len(recognised_words)

    has_required_words = all(word in user_message for word in required_words)

    if has_required_words or single_response:
        return int(percentage * 100)
    return 0

def check_all_messages(message):
    highest_prob_list = {}

    def response(bot_response, list_of_words, single_response=False, required_words=[]):
        highest_prob_list[bot_response] = message_prob(message, list_of_words, single_response, required_words)

    response('Hello!', ['hello', 'hi', 'hey', 'sup', 'heyo'], single_response=True)
    response('See you!', ['bye', 'goodbye'], single_response=True)
    response('I\'m doing fine, and you?', ['how', 'are', 'you', 'doing'], required_words=['how'])
    response('You\'re welcome!', ['thank', 'thanks','thankyou'], single_response=True)
    response('I love you too!', ['i', 'love', 'you'], required_words=['love', 'you'])
    response('Nothing', ['what', 'are', 'you', 'doing'], required_words=['what', 'doing'])

    best_match = max(highest_prob_list, key=highest_prob_list.get)

    if highest_prob_list[best_match] == 0:
        return "I'm not sure how to respond to that."

    return best_match

def get_response(user_input):
    split_message = re.split(r'\s+|[,;?!.-]\s*', user_input.lower())
    return check_all_messages(split_message)

# Testing the response system
while True:
    print('Bot: ' + get_response(input('You: ')))
